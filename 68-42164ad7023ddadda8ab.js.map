{"version":3,"sources":["webpack:///./node_modules/@etclabscore/react-monaco-editor/node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js"],"names":["conf","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","escapes","empty","alphanumerics","alphanumericsplus","simpleRefNameWithoutBq","simpleRefName","phrase","citationName","blockLiteralStart","precedingChars","followingChars","punctuation","tokenizer","root","include","explicitMarkupBlocks","token","next","inlineMarkup","citations","citationsReference","footnotes","footnotesReference","blankLineOfLiteralBlocks","subsequentLinesOfLiteralBlocks","subsequentLines","hyperlinks","comments","tables"],"mappings":"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","file":"68-42164ad7023ddadda8ab.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>',\n    notIn: ['string']\n  }],\n  surroundingPairs: [{\n    open: '(',\n    close: ')'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp('^\\\\s*<!--\\\\s*#?region\\\\b.*-->'),\n      end: new RegExp('^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->')\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.rst',\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  empty: ['area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'],\n  alphanumerics: /[A-Za-z0-9]/,\n  alphanumericsplus: /[A-Za-z0-9-_+:.]/,\n  simpleRefNameWithoutBq: /(?:@alphanumerics@alphanumericsplus*@alphanumerics)+|(?:@alphanumerics+)/,\n  simpleRefName: /(?:`@simpleRefNameWithoutBq`|@simpleRefNameWithoutBq)/,\n  phrase: /@simpleRefName(?:\\s@simpleRefName)*/,\n  citationName: /[A-Za-z][A-Za-z0-9-_.]*/,\n  blockLiteralStart: /(?:[!\"#$%&'()*+,-./:;<=>?@\\[\\]^_`{|}~]|[\\s])/,\n  precedingChars: /(?:[ -:/'\"<([{])/,\n  followingChars: /(?:[ -.,:;!?/'\")\\]}>]|$)/,\n  punctuation: /(=|-|~|`|#|\"|\\^|\\+|\\*|:|\\.|'|_|\\+)/,\n  tokenizer: {\n    root: [\n    //sections\n    [/^(@punctuation{3,}$){1,1}?/, 'keyword'],\n    //line-blocks\n    //No rules on it\n    //bullet-lists\n    [/^\\s*([\\*\\-+‣•]|[a-zA-Z0-9]+\\.|\\([a-zA-Z0-9]+\\)|[a-zA-Z0-9]+\\))\\s/, 'keyword'],\n    //literal-blocks\n    [/([ ]::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'], [/(::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'], {\n      include: '@tables'\n    }, {\n      include: '@explicitMarkupBlocks'\n    }, {\n      include: '@inlineMarkup'\n    }],\n    explicitMarkupBlocks: [\n    //citations\n    {\n      include: '@citations'\n    },\n    //footnotes\n    {\n      include: '@footnotes'\n    },\n    //directives\n    [/^(\\.\\.\\s)(@simpleRefName)(::\\s)(.*)$/, [{\n      token: '',\n      next: 'subsequentLines'\n    }, 'keyword', '', '']],\n    //hyperlink-targets\n    [/^(\\.\\.)(\\s+)(_)(@simpleRefName)(:)(\\s+)(.*)/, [{\n      token: '',\n      next: 'hyperlinks'\n    }, '', '', 'string.link', '', '', 'string.link']],\n    //anonymous-hyperlinks\n    [/^((?:(?:\\.\\.)(?:\\s+))?)(__)(:)(\\s+)(.*)/, [{\n      token: '',\n      next: 'subsequentLines'\n    }, '', '', '', 'string.link']], [/^(__\\s+)(.+)/, ['', 'string.link']],\n    //substitution-definitions\n    [/^(\\.\\.)( \\|)([^| ]+[^|]*[^| ]*)(\\| )(@simpleRefName)(:: .*)/, [{\n      token: '',\n      next: 'subsequentLines'\n    }, '', 'string.link', '', 'keyword', ''], '@rawBlocks'], [/(\\|)([^| ]+[^|]*[^| ]*)(\\|_{0,2})/, ['', 'string.link', '']],\n    //comments\n    [/^(\\.\\.)([ ].*)$/, [{\n      token: '',\n      next: '@comments'\n    }, 'comment']]],\n    inlineMarkup: [{\n      include: '@citationsReference'\n    }, {\n      include: '@footnotesReference'\n    },\n    //hyperlink-references\n    [/(@simpleRefName)(_{1,2})/, ['string.link', '']],\n    //embedded-uris-and-aliases\n    [/(`)([^<`]+\\s+)(<)(.*)(>)(`)(_)/, ['', 'string.link', '', 'string.link', '', '', '']],\n    //emphasis\n    [/\\*\\*([^\\\\*]|\\*(?!\\*))+\\*\\*/, 'strong'], [/\\*[^*]+\\*/, 'emphasis'],\n    //inline-literals\n    [/(``)((?:[^`]|\\`(?!`))+)(``)/, ['', 'keyword', '']], [/(__\\s+)(.+)/, ['', 'keyword']],\n    //interpreted-text\n    [/(:)((?:@simpleRefNameWithoutBq)?)(:`)([^`]+)(`)/, ['', 'keyword', '', '', '']], [/(`)([^`]+)(`:)((?:@simpleRefNameWithoutBq)?)(:)/, ['', '', '', 'keyword', '']], [/(`)([^`]+)(`)/, ''],\n    //inline-internal-targets\n    [/(_`)(@phrase)(`)/, ['', 'string.link', '']]],\n    citations: [[/^(\\.\\.\\s+\\[)((?:@citationName))(\\]\\s+)(.*)/, [{\n      token: '',\n      next: '@subsequentLines'\n    }, 'string.link', '', '']]],\n    citationsReference: [[/(\\[)(@citationName)(\\]_)/, ['', 'string.link', '']]],\n    footnotes: [[/^(\\.\\.\\s+\\[)((?:[0-9]+))(\\]\\s+.*)/, [{\n      token: '',\n      next: '@subsequentLines'\n    }, 'string.link', '']], [/^(\\.\\.\\s+\\[)((?:#@simpleRefName?))(\\]\\s+)(.*)/, [{\n      token: '',\n      next: '@subsequentLines'\n    }, 'string.link', '', '']], [/^(\\.\\.\\s+\\[)((?:\\*))(\\]\\s+)(.*)/, [{\n      token: '',\n      next: '@subsequentLines'\n    }, 'string.link', '', '']]],\n    footnotesReference: [[/(\\[)([0-9]+)(\\])(_)/, ['', 'string.link', '', '']], [/(\\[)(#@simpleRefName?)(\\])(_)/, ['', 'string.link', '', '']], [/(\\[)(\\*)(\\])(_)/, ['', 'string.link', '', '']]],\n    blankLineOfLiteralBlocks: [[/^$/, '', '@subsequentLinesOfLiteralBlocks'], [/^.*$/, '', '@pop']],\n    subsequentLinesOfLiteralBlocks: [[/(@blockLiteralStart+)(.*)/, ['keyword', '']], [/^(?!blockLiteralStart)/, '', '@popall']],\n    subsequentLines: [[/^[\\s]+.*/, ''], [/^(?!\\s)/, '', '@pop']],\n    hyperlinks: [[/^[\\s]+.*/, 'string.link'], [/^(?!\\s)/, '', '@pop']],\n    comments: [[/^[\\s]+.*/, 'comment'], [/^(?!\\s)/, '', '@pop']],\n    tables: [[/\\+-[+-]+/, 'keyword'], [/\\+=[+=]+/, 'keyword']]\n  }\n};"],"sourceRoot":""}