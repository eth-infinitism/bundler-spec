{"version":3,"sources":["webpack:///./node_modules/@etclabscore/react-monaco-editor/node_modules/monaco-editor/esm/vs/basic-languages/systemverilog/systemverilog.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","offSide","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","builtin_gates","operators","symbols","escapes","identifier","systemcall","timeunits","tokenizer","root","cases","next","include","identifier_or_keyword","numbers","module_instance","port_connection","whitespace","comment","strings","string"],"mappings":"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","file":"4-0e0ca4141c4da056124f.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['begin', 'end'], ['case', 'endcase'], ['casex', 'endcase'], ['casez', 'endcase'], ['checker', 'endchecker'], ['class', 'endclass'], ['clocking', 'endclocking'], ['config', 'endconfig'], ['function', 'endfunction'], ['generate', 'endgenerate'], ['group', 'endgroup'], ['interface', 'endinterface'], ['module', 'endmodule'], ['package', 'endpackage'], ['primitive', 'endprimitive'], ['program', 'endprogram'], ['property', 'endproperty'], ['specify', 'endspecify'], ['sequence', 'endsequence'], ['table', 'endtable'], ['task', 'endtask']],\n  autoClosingPairs: [{\n    open: '[',\n    close: ']'\n  }, {\n    open: '{',\n    close: '}'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    offSide: false,\n    markers: {\n      start: new RegExp('^(?:\\\\s*|.*(?!\\\\/[\\\\/\\\\*])[^\\\\w])(?:begin|case(x|z)?|class|clocking|config|covergroup|function|generate|interface|module|package|primitive|property|program|sequence|specify|table|task)\\\\b'),\n      end: new RegExp('^(?:\\\\s*|.*(?!\\\\/[\\\\/\\\\*])[^\\\\w])(?:end|endcase|endclass|endclocking|endconfig|endgroup|endfunction|endgenerate|endinterface|endmodule|endpackage|endprimitive|endproperty|endprogram|endsequence|endspecify|endtable|endtask)\\\\b')\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.sv',\n  brackets: [{\n    token: 'delimiter.curly',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }, {\n    token: 'delimiter.angle',\n    open: '<',\n    close: '>'\n  }],\n  keywords: ['accept_on', 'alias', 'always', 'always_comb', 'always_ff', 'always_latch', 'and', 'assert', 'assign', 'assume', 'automatic', 'before', 'begin', 'bind', 'bins', 'binsof', 'bit', 'break', 'buf', 'bufif0', 'bufif1', 'byte', 'case', 'casex', 'casez', 'cell', 'chandle', 'checker', 'class', 'clocking', 'cmos', 'config', 'const', 'constraint', 'context', 'continue', 'cover', 'covergroup', 'coverpoint', 'cross', 'deassign', 'default', 'defparam', 'design', 'disable', 'dist', 'do', 'edge', 'else', 'end', 'endcase', 'endchecker', 'endclass', 'endclocking', 'endconfig', 'endfunction', 'endgenerate', 'endgroup', 'endinterface', 'endmodule', 'endpackage', 'endprimitive', 'endprogram', 'endproperty', 'endspecify', 'endsequence', 'endtable', 'endtask', 'enum', 'event', 'eventually', 'expect', 'export', 'extends', 'extern', 'final', 'first_match', 'for', 'force', 'foreach', 'forever', 'fork', 'forkjoin', 'function', 'generate', 'genvar', 'global', 'highz0', 'highz1', 'if', 'iff', 'ifnone', 'ignore_bins', 'illegal_bins', 'implements', 'implies', 'import', 'incdir', 'include', 'initial', 'inout', 'input', 'inside', 'instance', 'int', 'integer', 'interconnect', 'interface', 'intersect', 'join', 'join_any', 'join_none', 'large', 'let', 'liblist', 'library', 'local', 'localparam', 'logic', 'longint', 'macromodule', 'matches', 'medium', 'modport', 'module', 'nand', 'negedge', 'nettype', 'new', 'nexttime', 'nmos', 'nor', 'noshowcancelled', 'not', 'notif0', 'notif1', 'null', 'or', 'output', 'package', 'packed', 'parameter', 'pmos', 'posedge', 'primitive', 'priority', 'program', 'property', 'protected', 'pull0', 'pull1', 'pulldown', 'pullup', 'pulsestyle_ondetect', 'pulsestyle_onevent', 'pure', 'rand', 'randc', 'randcase', 'randsequence', 'rcmos', 'real', 'realtime', 'ref', 'reg', 'reject_on', 'release', 'repeat', 'restrict', 'return', 'rnmos', 'rpmos', 'rtran', 'rtranif0', 'rtranif1', 's_always', 's_eventually', 's_nexttime', 's_until', 's_until_with', 'scalared', 'sequence', 'shortint', 'shortreal', 'showcancelled', 'signed', 'small', 'soft', 'solve', 'specify', 'specparam', 'static', 'string', 'strong', 'strong0', 'strong1', 'struct', 'super', 'supply0', 'supply1', 'sync_accept_on', 'sync_reject_on', 'table', 'tagged', 'task', 'this', 'throughout', 'time', 'timeprecision', 'timeunit', 'tran', 'tranif0', 'tranif1', 'tri', 'tri0', 'tri1', 'triand', 'trior', 'trireg', 'type', 'typedef', 'union', 'unique', 'unique0', 'unsigned', 'until', 'until_with', 'untyped', 'use', 'uwire', 'var', 'vectored', 'virtual', 'void', 'wait', 'wait_order', 'wand', 'weak', 'weak0', 'weak1', 'while', 'wildcard', 'wire', 'with', 'within', 'wor', 'xnor', 'xor'],\n  builtin_gates: ['and', 'nand', 'nor', 'or', 'xor', 'xnor', 'buf', 'not', 'bufif0', 'bufif1', 'notif1', 'notif0', 'cmos', 'nmos', 'pmos', 'rcmos', 'rnmos', 'rpmos', 'tran', 'tranif1', 'tranif0', 'rtran', 'rtranif1', 'rtranif0'],\n  operators: [\n  // assignment operators\n  '=', '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>+', '<<<=', '>>>=',\n  // conditional expression\n  '?', ':',\n  // Unary operators\n  '+', '-', '!', '~', '&', '~&', '|', '~|', '^', '~^', '^~',\n  //binary operators\n  '+', '-', '*', '/', '%', '==', '!=', '===', '!==', '==?', '!=?', '&&', '||', '**', '<', '<=', '>', '>=', '&', '|', '^', '>>', '<<', '>>>', '<<<',\n  // increment or decrement operator\n  '++', '--',\n  //binary logical operator\n  '->', '<->',\n  // binary set membership operator\n  'inside',\n  // binary distrubution operator\n  'dist', '::', '+:', '-:', '*>', '&&&', '|->', '|=>', '#=#'],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%#]+/,\n  escapes: /%%|\\\\(?:[antvf\\\\\"']|x[0-9A-Fa-f]{1,2}|[0-7]{1,3})/,\n  identifier: /(?:[a-zA-Z_][a-zA-Z0-9_$\\.]*|\\\\\\S+ )/,\n  systemcall: /[$][a-zA-Z0-9_]+/,\n  timeunits: /s|ms|us|ns|ps|fs/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // module instances\n    [/^(\\s*)(@identifier)/, ['', {\n      cases: {\n        '@builtin_gates': {\n          token: 'keyword.$2',\n          next: '@module_instance'\n        },\n        '@keywords': {\n          token: 'keyword.$2'\n        },\n        '@default': {\n          token: 'identifier',\n          next: '@module_instance'\n        }\n      }\n    }]],\n    // include statements\n    [/^\\s*`include/, {\n      token: 'keyword.directive.include',\n      next: '@include'\n    }],\n    // Preprocessor directives\n    [/^\\s*`\\s*\\w+/, 'keyword'],\n    // identifiers and keywords\n    {\n      include: '@identifier_or_keyword'\n    },\n    // whitespace\n    {\n      include: '@whitespace'\n    },\n    // (* attributes *).\n    [/\\(\\*.*\\*\\)/, 'annotation'],\n    // Systemcall\n    [/@systemcall/, 'variable.predefined'],\n    // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }],\n    // numbers\n    {\n      include: '@numbers'\n    },\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'],\n    // strings\n    {\n      include: '@strings'\n    }],\n    identifier_or_keyword: [[/@identifier/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }]],\n    numbers: [[/\\d+?[\\d_]*(?:\\.[\\d_]+)?[eE][\\-+]?\\d+/, 'number.float'], [/\\d+?[\\d_]*\\.[\\d_]+(?:\\s*@timeunits)?/, 'number.float'], [/(?:\\d+?[\\d_]*\\s*)?'[sS]?[dD]\\s*[0-9xXzZ?]+?[0-9xXzZ?_]*/, 'number'], [/(?:\\d+?[\\d_]*\\s*)?'[sS]?[bB]\\s*[0-1xXzZ?]+?[0-1xXzZ?_]*/, 'number.binary'], [/(?:\\d+?[\\d_]*\\s*)?'[sS]?[oO]\\s*[0-7xXzZ?]+?[0-7xXzZ?_]*/, 'number.octal'], [/(?:\\d+?[\\d_]*\\s*)?'[sS]?[hH]\\s*[0-9a-fA-FxXzZ?]+?[0-9a-fA-FxXzZ?_]*/, 'number.hex'], [/1step/, 'number'], [/[\\dxXzZ]+?[\\dxXzZ_]*(?:\\s*@timeunits)?/, 'number'], [/'[01xXzZ]+/, 'number']],\n    module_instance: [{\n      include: '@whitespace'\n    }, [/(#?)(\\()/, ['', {\n      token: '@brackets',\n      next: '@port_connection'\n    }]], [/@identifier\\s*[;={}\\[\\],]/, {\n      token: '@rematch',\n      next: '@pop'\n    }], [/@symbols|[;={}\\[\\],]/, {\n      token: '@rematch',\n      next: '@pop'\n    }], [/@identifier/, 'type'], [/;/, 'delimiter', '@pop']],\n    port_connection: [{\n      include: '@identifier_or_keyword'\n    }, {\n      include: '@whitespace'\n    }, [/@systemcall/, 'variable.predefined'], {\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, [/[,]/, 'delimiter'], [/\\(/, '@brackets', '@port_connection'], [/\\)/, '@brackets', '@pop']],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']],\n    comment: [[/[^\\/*]+/, 'comment'], [/\\*\\//, 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    strings: [[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, 'string', '@string']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, 'string', '@pop']],\n    include: [[/(\\s*)(\")([\\w*\\/*]*)(.\\w*)(\")/, ['', 'string.include.identifier', 'string.include.identifier', 'string.include.identifier', {\n      token: 'string.include.identifier',\n      next: '@pop'\n    }]], [/(\\s*)(<)([\\w*\\/*]*)(.\\w*)(>)/, ['', 'string.include.identifier', 'string.include.identifier', 'string.include.identifier', {\n      token: 'string.include.identifier',\n      next: '@pop'\n    }]]]\n  }\n};"],"sourceRoot":""}