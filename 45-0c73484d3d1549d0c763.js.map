{"version":3,"sources":["webpack:///./node_modules/@etclabscore/react-monaco-editor/node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","javadoc","string","multistring"],"mappings":"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","file":"45-0c73484d3d1549d0c763.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '<',\n    close: '>'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp('^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))'),\n      end: new RegExp('^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))')\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.kt',\n  keywords: ['as', 'as?', 'break', 'class', 'continue', 'do', 'else', 'false', 'for', 'fun', 'if', 'in', '!in', 'interface', 'is', '!is', 'null', 'object', 'package', 'return', 'super', 'this', 'throw', 'true', 'try', 'typealias', 'val', 'var', 'when', 'while', 'by', 'catch', 'constructor', 'delegate', 'dynamic', 'field', 'file', 'finally', 'get', 'import', 'init', 'param', 'property', 'receiver', 'set', 'setparam', 'where', 'actual', 'abstract', 'annotation', 'companion', 'const', 'crossinline', 'data', 'enum', 'expect', 'external', 'final', 'infix', 'inline', 'inner', 'internal', 'lateinit', 'noinline', 'open', 'operator', 'out', 'override', 'private', 'protected', 'public', 'reified', 'sealed', 'suspend', 'tailrec', 'vararg', 'field', 'it'],\n  operators: ['+', '-', '*', '/', '%', '=', '+=', '-=', '*=', '/=', '%=', '++', '--', '&&', '||', '!', '==', '!=', '===', '!==', '>', '<', '<=', '>=', '[', ']', '!!', '?.', '?:', '::', '..', ':', '?', '->', '@', ';', '$', '_'],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // class name highlighting\n    [/[A-Z][\\w\\$]*/, 'type.identifier'],\n    // identifiers and keywords\n    [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }],\n    // whitespace\n    {\n      include: '@whitespace'\n    },\n    // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }],\n    // @ annotations.\n    [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n    // numbers\n    [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'], [/0[xX](@hexdigits)[Ll]?/, 'number.hex'], [/0(@octaldigits)[Ll]?/, 'number.octal'], [/0[bB](@binarydigits)[Ll]?/, 'number.binary'], [/(@digits)[fFdD]/, 'number.float'], [/(@digits)[lL]?/, 'number'],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"\"\"/, 'string', '@multistring'], [/\"/, 'string', '@string'],\n    // characters\n    [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']],\n    comment: [[/[^\\/*]+/, 'comment'], [/\\/\\*/, 'comment', '@comment'], [/\\*\\//, 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    //Identical copy of comment above, except for the addition of .doc\n    javadoc: [[/[^\\/*]+/, 'comment.doc'], [/\\/\\*/, 'comment.doc', '@push'], [/\\/\\*/, 'comment.doc.invalid'], [/\\*\\//, 'comment.doc', '@pop'], [/[\\/*]/, 'comment.doc']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, 'string', '@pop']],\n    multistring: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"\"\"/, 'string', '@pop'], [/./, 'string']]\n  }\n};"],"sourceRoot":""}